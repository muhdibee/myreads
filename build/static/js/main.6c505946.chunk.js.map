{"version":3,"sources":["BooksAPI.js","HomePage.js","searchTerms.js","SearchPage.js","ErrorPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Home","_ref","inShelvebooks","handleHomePageShelfChange","currentRead","wantToRead","read","map","push","findCurrentRead","findWantToRead","findRead","react_default","a","createElement","className","console","log","key","href","previewLink","target","rel","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","e","disabled","title","Array","isArray","authors","join","react_router_dom","to","searchTerms","SearchPage","handleSearch","queryResult","handleSearchPageShelfChange","changeShelf","searchedBooks","lib","minLength","debounceTimeout","placeholder","length","HowtoSearch","bookUrl","bookId","selectedBook","find","selectedBookIndex","indexOf","updatedBookList","filter","splice","handleBookChange","term","margin","padding","border","ErrorPage","location","marginTop","marginBottom","marginLeft","alignItems","pathname","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchHandler","setState","BookAPI","state","queriedBooks","searchedBooksWithShelf","foundBook","foundBookInHomePage","ibook","bind","assertThisInitialized","updateHomePage","_this2","catch","_this3","react_router","exact","path","component","HomePage","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6c505946.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, {} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n const Home = ({inShelvebooks,handleHomePageShelfChange}) => {\r\n   const currentRead = [];\r\n   const wantToRead = [];\r\n   const read = [];\r\n\r\n   const findCurrentRead = (book)=>{\r\n     if(book.shelf === 'currentlyReading')\r\n      return currentRead.push(book);\r\n   }\r\n\r\n   const findWantToRead = (book)=>{\r\n    if(book.shelf === 'wantToRead') return wantToRead.push(book)\r\n  }\r\n\r\n  const findRead = (book)=>{\r\n    if(book.shelf === 'read') return read.push(book)\r\n  }\r\n\r\n     inShelvebooks.map((book) => {\r\n        findCurrentRead(book);\r\n        findWantToRead(book);\r\n        findRead(book)\r\n        return('')\r\n     })\r\n\r\n      return (\r\n            <div className=\"list-books\">{console.log()}\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title currently-reading\">Currently Reading</h2>\r\n                    <div className=\"bookshelf-books\">{/* {console.log(currentRead)} */}\r\n                      <ol className=\"books-grid\">\r\n                            {currentRead.map((book) => {\r\n                                return(\r\n                                  <li key={book.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                        <a href= {book.previewLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\r\n                                        </a>\r\n                                        <div className=\"book-shelf-changer\">\r\n                                            <select value={book.shelf} onChange={(e) => handleHomePageShelfChange(book.id, e)}>\r\n                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"book-title\">{book.title}</div>\r\n                                        <div className=\"book-authors\">{Array.isArray(book.authors) ? book.authors.join(', '): book.authors}</div>\r\n                                    </div>\r\n                                  </li>\r\n                                )\r\n                            }\r\n                             )\r\n                            }\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title want-to-read\">Want to Read</h2>\r\n                    <div className=\"bookshelf-books\"> {/* {console.log(wantToRead)} */}\r\n                    <ol className=\"books-grid\">\r\n                            {wantToRead.map((book) => {\r\n                                return(\r\n                                  <li key={book.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                        <a href= {book.previewLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                        </a>\r\n                                        <div className=\"book-shelf-changer\">\r\n                                            <select value={book.shelf} onChange={(e) => handleHomePageShelfChange(book.id, e)}>\r\n                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"book-title\">{book.title}</div>\r\n                                        <div className=\"book-authors\">{book.authors.join(', ')}</div>\r\n                                    </div>\r\n                                  </li>\r\n                                )\r\n                            }\r\n                             )\r\n                            }\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title read\">Read</h2>\r\n                    <div className=\"bookshelf-books\">{/* {console.log(read)} */}\r\n                    <ol className=\"books-grid\">\r\n                            {read.map((book) => {\r\n                                return(\r\n                                  <li key={book.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                        <a href= {book.previewLink} target=\"_blank\">\r\n                                           <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                        </a>\r\n                                        <div className=\"book-shelf-changer\">\r\n                                            <select value={book.shelf} onChange={(e) => handleHomePageShelfChange(book.id, e)}>\r\n                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"book-title\">{book.title}</div>\r\n                                        <div className=\"book-authors\">{book.authors.join(', ')}</div>\r\n                                    </div>\r\n                                  </li>\r\n                                )\r\n                            }\r\n                             )\r\n                            }\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"open-search\">\r\n                  <Link to='/search'><button>Add a book</button></Link>\r\n              </div>\r\n            </div>\r\n      )\r\n}\r\n\r\n  export default Home;\r\n","export const searchTerms = [\r\n    'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'\r\n]\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport {searchTerms} from './searchTerms'\r\n\r\nexport default function SearchPage({handleSearch, query, queryResult,handleSearchPageShelfChange, changeShelf}) {\r\n  console.log(queryResult)\r\n  let searchedBooks = [];\r\n  if(Array.isArray(queryResult)){\r\n    queryResult.map((books) => searchedBooks.push(books))\r\n  }\r\n  else {}\r\n\r\n  function handleBookChange(bookId, shelf) {\r\n    handleSearchPageShelfChange(bookId, shelf);\r\n      let selectedBook = searchedBooks.find(book => book.id === bookId);\r\n      let selectedBookIndex = searchedBooks.indexOf(selectedBook);\r\n      selectedBook.shelf = shelf.target.value;\r\n      let updatedBookList = searchedBooks.filter(book => book.id !== bookId);\r\n      updatedBookList.splice(selectedBookIndex, 0, selectedBook);\r\n      searchedBooks = updatedBookList;\r\n      changeShelf(searchedBooks)\r\n  }\r\n\r\nreturn (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n            <Link to=\"/\"><button className=\"close-search\">Close</button></Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                  <DebounceInput minLength={1} debounceTimeout={300} placeholder=\"Search by title or author\" onChange= {(e) => handleSearch(e)} value={query}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                  {searchedBooks.length === 0 ? <HowtoSearch />:\r\n                  searchedBooks.map((book) => {\r\n                    let bookUrl = book.imageLinks ? book.imageLinks.thumbnail : \"\";\r\n                      return(\r\n                        <li key ={book.id}>\r\n                          <div className=\"book\">\r\n                              <div className=\"book-top\">\r\n                              <a href= {book.previewLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${bookUrl})` }}></div>\r\n                              </a>\r\n                              <div className=\"book-shelf-changer\">\r\n                                  <select value={book.shelf ? book.shelf: \"none\"} onChange={(e) => handleBookChange(book.id, e)}>\r\n                                      <option value=\"move\" disabled>Move to...</option>\r\n                                      <option value=\"currentlyReading\">Currently Reading</option>\r\n                                      <option value=\"wantToRead\">Want to Read</option>\r\n                                      <option value=\"read\">Read</option>\r\n                                      <option value=\"none\">None</option>\r\n                                  </select>\r\n                              </div>\r\n                              </div>\r\n                              <div className=\"book-title\">{book.title}</div>\r\n                              <div className=\"book-authors\">{Array.isArray(book.authors) ? book.authors.join(', '): book.authors}</div>\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    }\r\n                  )\r\n                  }\r\n              </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction HowtoSearch () {\r\n  return(\r\n    <div className='search-page-text-color'>\r\n      <h1 className=\"text-center\">Please provide a registered search term in the search field above</h1>\r\n      <div className=\"text-center\">\r\n        <h2 >See some search terms below:</h2>\r\n        <div className=\"text-div\">\r\n          {searchTerms.map((term) => <h4 style={{margin:'3px', padding:'3px', border: \"1px ridge\"}}>{term}</h4>)}\r\n        </div>\r\n      </div>\r\n      <p></p>\r\n    </div>\r\n\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function ErrorPage({location}) {\r\n\r\n    return (\r\n        <div style={{marginTop: 20, marginBottom: 20, marginLeft: 20, alignItems:'center'}}>\r\n            <h1 >Error 404: page not found</h1>\r\n            <h5>No Page match for <code> https://myreadsapp.com{location.pathname}</code></h5>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport * as BookAPI from './BooksAPI';\r\nimport './App.css';\r\nimport Home from './HomePage';\r\nimport Search from './SearchPage'\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    inShelvebooks: [],\r\n    query: '',\r\n    queryResult: [],\r\n    };\r\n    this.handleHomePageShelfChange = this.handleHomePageShelfChange.bind(this);\r\n    this.changeShelf = this.changeShelf.bind(this);\r\n    this.updateHomePage= this.updateHomePage.bind(this)\r\n  }\r\n\r\n  updateHomePage() {\r\n    BookAPI.getAll()\r\n    .then((books) => {\r\n      this.setState({\r\n        inShelvebooks: books\r\n      })\r\n    });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.updateHomePage()\r\n  }\r\n\r\n  searchHandler = (e) =>{\r\n    this.setState({query: e.target.value});\r\n        BookAPI.search(this.state.query)\r\n        .then((queriedBooks) => {\r\n          let searchedBooksWithShelf = [];\r\n          if (Array.isArray(queriedBooks)){\r\n            queriedBooks.map((book) => {\r\n            let foundBook;\r\n            let foundBookInHomePage = this.state.inShelvebooks.filter((ibook)=> book.id === ibook.id)[0];\r\n            if (foundBookInHomePage){\r\n              foundBook = foundBookInHomePage;\r\n              return searchedBooksWithShelf.push(foundBook)\r\n            } else{\r\n              foundBook = book;\r\n              foundBook.shelf = 'none';\r\n              return searchedBooksWithShelf.push(foundBook)\r\n            }\r\n          });\r\n          this.setState({\r\n            queryResult: searchedBooksWithShelf\r\n          })\r\n          } else {\r\n            this.setState({\r\n              queryResult: []\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n    handleHomePageShelfChange (bookId, shelf) {\r\n      let selectedBook = this.state.inShelvebooks.find(book => book.id === bookId);\r\n      selectedBook.shelf = shelf.target.value;\r\n      let updatedBookList = this.state.inShelvebooks.filter(book => book.id !== bookId);\r\n      updatedBookList.push(selectedBook);\r\n      this.setState({\r\n        inShelvebooks: updatedBookList\r\n      })\r\n\r\n      BookAPI.update({id:bookId}, shelf.target.value)\r\n      .catch();\r\n\r\n    }\r\n\r\n    handleSearchPageShelfChange (bookId, shelf) {\r\n      BookAPI.update({id:bookId}, shelf.target.value)\r\n      .catch();\r\n    }\r\n\r\n    changeShelf (searchedBooks) {\r\n      this.setState({\r\n        queryResult: searchedBooks\r\n      });\r\n      this.updateHomePage()\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path='/' component={() => <Home inShelvebooks={this.state.inShelvebooks} handleHomePageShelfChange={this.handleHomePageShelfChange}/>} />\r\n            <Route exact path='/search'>\r\n              <Search  handleSearch={this.searchHandler} query={this.state.query} queryResult={this.state.queryResult} handleSearchPageShelfChange={this.handleSearchPageShelfChange} changeShelf= {this.changeShelf}/>\r\n            </Route>\r\n            <Route component={ErrorPage}/>\r\n          </Switch>\r\n      </BrowserRouter>\r\n     );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}